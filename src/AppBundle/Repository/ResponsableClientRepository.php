<?php

namespace AppBundle\Repository;
use AppBundle\Functions\CustomPdoConnection;
use AppBundle\Entity\Client;
use Doctrine\ORM\EntityRepository;

/**
 * ResponsableClientRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ResponsableClientRepository extends EntityRepository
{
	
	public function getClientIds($responsable)
    {
		$con = new CustomPdoConnection();
        $pdo = $con->connect();
		$this->directeur();
        $query = "SELECT client FROM responsable_client WHERE responsable = :responsable";

        $prep = $pdo->prepare($query);
        $prep->execute(array('responsable' => $responsable));
		$data = array();	
		$listRespCli = $prep->fetchAll();
		$k=0;
		foreach ($listRespCli as $rc) {
			$client = $rc->client;
			$data[$k]['id']=$client;
			$query = "SELECT nom FROM client WHERE id = :client";
			$prep = $pdo->prepare($query);
			$prep->execute(array('client' => $client));
			$client = $prep->fetch();
			$data[$k]['nom']=$client->nom;
			$k++;
		}
        return $data;
    }
    
    public function isAffecte($cli){
        $con = new CustomPdoConnection();
        $pdo = $con->connect();	
        $query = "SELECT client FROM responsable_client WHERE client = :client";

        $prep = $pdo->prepare($query);
        $prep->execute(array('client' => $cli));
        $listRespCli = $prep->fetchAll();
        if (count($listRespCli)>0){
              return 1;  
        } else {
            return 0;
        }
    }
	
	public function isAffecteR($resp){
        $con = new CustomPdoConnection();
        $pdo = $con->connect();	
        $query = "SELECT client FROM responsable_client WHERE responsable = :responsable";

        $prep = $pdo->prepare($query);
        $prep->execute(array('responsable' => $resp));
        $listRespCli = $prep->fetchAll();
        if (count($listRespCli)>0){
              return 1;  
        } else {
            return 0;
        }
    }

	public function removeRespsUn($responsable)
    {
		$con = new CustomPdoConnection();
        $pdo = $con->connect();
		$query = "DELETE FROM responsable_client WHERE responsable = :responsable";
		$prep = $pdo->prepare($query);
        $prep->execute(array('responsable' => $responsable));
	}

	public function removeResps()
    {
        $con = new CustomPdoConnection();
        $pdo = $con->connect();
        $query = "DELETE t1 
                    FROM responsable_client AS t1, responsable_client AS t2
                    WHERE t1.id > t2.id
                    AND t1.responsable = t2.responsable
                    AND t1.client = t2.client";
        $prep = $pdo->prepare($query);
        $prep->execute();
    }

    public function removeResCli($cli,$resp)
    {
        $con = new CustomPdoConnection();
        $pdo = $con->connect();
        $query = "DELETE FROM responsable_client 
                    WHERE responsable = :responsable
                    AND client = :client";
        $prep = $pdo->prepare($query);
        $prep->execute(array(':responsable' => $resp,':client' => $cli));
    }
	
	public function directeur (){
		$con = new CustomPdoConnection();
        $pdo = $con->connect();
		
		$query = 'DELETE FROM responsable_client WHERE responsable =59';
        $prep = $pdo->query($query);
        $prep->execute(); 

       
        $query = "SELECT client FROM responsable_client WHERE responsable = 62";
        $prep = $pdo->query($query);
		$listRespCli = $prep->fetchAll();
		foreach ($listRespCli as $rc) {
			$stmt = $pdo->prepare("INSERT INTO responsable_client (responsable,client) VALUES (59,:cli)");
			$stmt->bindParam(':cli', $rc->client);
			$stmt->execute();
		}	
		
	}

    /**
     * Liste des clients par responsable/operateur
     *
     * @param int $responsable operateur_id
     * 
     * @return array 
     */
    public function getClientsByResponsable($responsable)
    {
        $con = new CustomPdoConnection();
        $pdo = $con->connect();

        //SCRIPTURA ou SU 
        if ($responsable == 507 || $responsable == 239) {
            $query = "SELECT * 
                      FROM client
                      WHERE status = 1 
                      ORDER BY nom";
        }
        else{
            $query =" SELECT c.id,c.nom 
                      FROM operateur_utilisateur op 
                      INNER JOIN utilisateur u ON u.id = op.utilisateur_id 
                      INNER JOIN client c ON c.id = u.client_id
                      WHERE op.operateur_id = $responsable";

            $query .= " AND c.status = 1
                      ORDER BY c.nom";
        }

        $prep = $pdo->query($query);
        $prep->execute(); 
        $resultat = $prep->fetchAll();

        return $resultat;
    }
}
